{"version":3,"sources":["serviceWorker.ts","store/actions/StoreState.actions.ts","models/IStore.ts","store/reducers/StoreState.reducer.ts","models/IProjectConfig.ts","store/actions/CreateNewProject.actions.ts","store/reducers/CreateNewProject.reducer.ts","store/reducers/index.ts","models/IReducer.ts","store/index.ts","components/InputField.tsx","config/FormConfig.ts","components/CreateNewProject.tsx","components/MonacoEditor.tsx","components/StoreStateConfig.tsx","code-generation/ActionCreator.ts","components/StoreActionsConfig.tsx","components/ConfigureStore.tsx","components/Content.tsx","components/Footer.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","STORE_STATE_ACTIONS","UpdateStoreStateAction","payload","type","selectStoreInitialState","state","storeState","initialValue","selectStoreIsValid","isValid","selectStoreState","JSON","parse","Error","IStoreInitialState","StoreStateReducer","arguments","length","undefined","action","StoreStateActions","Object","objectSpread","e","IProjectConfigInitialState","name","framework","storeModule","middleware","CREATE_PROJECT_STATE_ACTIONS","NAME_UPDATE_ACTION","FRAMEWORK_UPDATE_ACTION","STORE_MODULE_UPDATE_ACTION","MIDDLEWARE_UPDATE_ACTION","CreateNewProjectStateReducer","ReducerConfiguration","history","combineReducers","router","connectRouter","createProjectState","IReducerInitialValue","createBrowserHistory","styles","createStyles","margin10","margin","InputField","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inputRef","React","handleInputChange","bind","assertThisInitialized","event","dispatch","valueEmitter","target","value","_this2","classes","react","FormControl_default","a","className","select","TextField_default","id","label","placeholder","innerRef","onChange","InputLabel_default","htmlFor","Select_default","inputProps","MenuItem_default","options","filter","op","disabled","map","key","title","withStyles","connect","CreateProjectFormConfig","valueSelector","appliesTo","jcc","alignItems","justifyContent","padded5","padding","formContainer","width","button","icon","buttons","flexDirection","withRouter","join","Paper_default","elevation","Typography_default","component","variant","FormGroup_default","pc","components_InputField","assign","Fab_default","color","aria-label","onClick","push","Save_default","Clear_default","editor","height","defaultOptions","theme","language","MonacoEditor","textAreaRef","_editor","monaco","create","current","onEditorChange","onDidChangeModelContent","getValue","_this$props$classes","ref","StoreStateConfig","onMonacoEditorChanged","onMonacoEditorMounted","valueUpdated","models","output","model","console","log","createActions","currentState","components_MonacoEditor","onEditorMount","leftPanel","display","v","s","stringify","readOnly","currentStateValue","footerButton","borderTop","stepper","borderBottom","abandon","alignSelf","marginLeft","iconR","spacer","flex","lc","textTransform","steps","StoreActionsConfig","findIndex","ConfigureStore","currentStep","handleNext","handlePrev","handleDone","handleDiscard","handleTabChange","currentIndex","prevStep","find","setState","nextStep","activeStep","Tabs_default","Tab_default","ContentComponent","Switch","Route","exact","path","CreateNewProject","Content","intialState","footer","backgroundColor","link","fontWeight","iconL","fontSize","flexGrow","padded","_props$classes","index_es","href","Code_default","grow","menuButton","marginRight","Navbar","AppBar_default","position","Toolbar_default","IconButton_default","Menu_default","AppComponent","react_default","createElement","components_Navbar","components_Content","components_Footer","Component","App","initialState","setInitialStoreState","store","createStore","compose","applyMiddleware","routerMiddleware","baseStyles","f","c","r","Base","es","esm","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.59043e4f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { ActionCreator, Action } from 'redux';\nimport { IReducer } from \"../../models/IReducer\";\n\nexport const STORE_STATE_ACTIONS = {\n    UPDATE_STORE: '[Store State] Update Store State',\n    RESET_STORE: '[Store State] Reset Store State'\n}\n\nexport interface IStoreStateAction extends Action {\n    payload: string;\n}\n\nexport const UpdateStoreStateAction: ActionCreator<IStoreStateAction> = (payload: string): IStoreStateAction => ({\n    type: STORE_STATE_ACTIONS.UPDATE_STORE,\n    payload: payload\n});\n\nexport const ResetStoreStateAction: ActionCreator<IStoreStateAction> = (): IStoreStateAction => ({\n    type: STORE_STATE_ACTIONS.RESET_STORE,\n    payload: '{ }'\n});\n\nexport const selectStoreInitialState = (state: IReducer) => state.storeState.initialValue;\nexport const selectStoreIsValid = (state: IReducer) => state.storeState.isValid;\nexport const selectStoreState = (state: IReducer) => state.storeState.isValid ? JSON.parse(state.storeState.initialValue) : new Error('Invalid State JSON');","export interface IStore {\n    initialValue: any;\n    isValid: boolean;\n}\n\nexport const IStoreInitialState: IStore = {\n    initialValue: `{\n    \"models\": [\n        {\n            \"name\": \"Todo\",\n            \"schema\": {\n                \"id\": \"string\",\n                \"title\": \"string\",\n                \"done\": \"boolean\"\n            }\n        }\n    ],\n    \"state\": [\n        {\n            \"name\": \"todos\",\n            \"model\": \"Todo[]\",\n            \"value\": [\n                {\n                    \"id\": \"abc123\",\n                    \"title\": \"Complete Redux UI Builder App\",\n                    \"done\": false\n                }\n            ]\n        }\n    ]\n}`,\n    isValid: true\n};\n","import * as StoreStateActions from '../actions/StoreState.actions';\nimport { IStore, IStoreInitialState } from '../../models/IStore';\nimport { Reducer, AnyAction } from 'redux';\n\nexport const StoreStateReducer: Reducer<IStore> = (\n    state: IStore = IStoreInitialState,\n    action: AnyAction\n): IStore => {\n    switch (action.type) {\n        case StoreStateActions.STORE_STATE_ACTIONS.RESET_STORE:\n            return { ...state, initialValue: '{\\n\\t\"models\": [],\\n\\t\"state\": []\\n}', isValid: true };\n        case StoreStateActions.STORE_STATE_ACTIONS.UPDATE_STORE:\n            let isValid = true;\n            try {\n                JSON.parse(action.payload);\n                isValid = true;\n            } catch (e) {\n                isValid = false\n            }\n            return { ...state, initialValue: action.payload, isValid };\n        default:\n            return { ...state };\n    }\n\n}","export interface IProjectConfig {\n    name: string;\n    framework: string;\n    storeModule: string;\n    middleware: string;\n}\n\nexport const IProjectConfigInitialState: IProjectConfig = {\n    name: '',\n    framework: '',\n    storeModule: '',\n    middleware: ''\n}","import { ActionCreator, Action } from 'redux';\nimport { IReducer } from \"../../models/IReducer\";\n\nexport const CREATE_PROJECT_STATE_ACTIONS = {\n    NAME_UPDATE_ACTION: '[Create Project State] Update Name',\n    FRAMEWORK_UPDATE_ACTION: '[Create Project State] Update Framework',\n    STORE_MODULE_UPDATE_ACTION: '[Create Project State] Update Store Module',\n    MIDDLEWARE_UPDATE_ACTION: '[Create Project State] Update MIDDLEWARE'\n}\n\nexport interface IProjectConfigAction extends Action {\n    payload: string;\n}\n\nexport const UpdateFrameworkCreateProjectAction: ActionCreator<IProjectConfigAction> = (payload: string): IProjectConfigAction => ({\n    type: CREATE_PROJECT_STATE_ACTIONS.FRAMEWORK_UPDATE_ACTION,\n    payload\n});\n\nexport const UpdateMiddlewareCreateProjectAction: ActionCreator<IProjectConfigAction> = (payload: string): IProjectConfigAction => ({\n    type: CREATE_PROJECT_STATE_ACTIONS.MIDDLEWARE_UPDATE_ACTION,\n    payload\n});\n\nexport const UpdateNameCreateProjectAction: ActionCreator<IProjectConfigAction> = (payload: string): IProjectConfigAction => ({\n    type: CREATE_PROJECT_STATE_ACTIONS.NAME_UPDATE_ACTION,\n    payload\n});\n\nexport const UpdateStoreModuleCreateProjectAction: ActionCreator<IProjectConfigAction> = (payload: string): IProjectConfigAction => ({\n    type: CREATE_PROJECT_STATE_ACTIONS.STORE_MODULE_UPDATE_ACTION,\n    payload\n});\n\nexport const selectNewProjectFramework = (state: IReducer) => state.createProjectState.framework;\nexport const selectNewProjectMiddleware = (state: IReducer) => state.createProjectState.middleware;\nexport const selectNewProjectName = (state: IReducer) => state.createProjectState.name;\nexport const selectNewProjectStoreModule = (state: IReducer) => state.createProjectState.storeModule;","import { IProjectConfig, IProjectConfigInitialState } from '../../models/IProjectConfig';\nimport { CREATE_PROJECT_STATE_ACTIONS, IProjectConfigAction } from '../actions/CreateNewProject.actions';\n\nexport function CreateNewProjectStateReducer(\n    state: IProjectConfig = IProjectConfigInitialState,\n    action: IProjectConfigAction\n): IProjectConfig {\n    switch (action.type) {\n        case CREATE_PROJECT_STATE_ACTIONS.FRAMEWORK_UPDATE_ACTION:\n            return { ...state, framework: action.payload };\n        case CREATE_PROJECT_STATE_ACTIONS.MIDDLEWARE_UPDATE_ACTION:\n            return { ...state, middleware: action.payload };\n        case CREATE_PROJECT_STATE_ACTIONS.NAME_UPDATE_ACTION:\n            return { ...state, name: action.payload };\n        case CREATE_PROJECT_STATE_ACTIONS.STORE_MODULE_UPDATE_ACTION:\n            return { ...state, storeModule: action.payload };\n        default:\n            return { ...state };\n    }\n}","import { combineReducers, Reducer } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport { History } from 'history';\n\nimport { StoreStateReducer } from './StoreState.reducer';\nimport { CreateNewProjectStateReducer } from './CreateNewProject.reducer';\n\nexport const ReducerConfiguration = (history: History) => combineReducers({\n    router: connectRouter(history),\n    storeState: StoreStateReducer,\n    createProjectState: CreateNewProjectStateReducer\n})","import { LocationChangeAction, RouterState } from 'connected-react-router';\nimport { IStore, IStoreInitialState } from './IStore';\nimport { Reducer, AnyAction, ReducersMapObject } from 'redux';\nimport { IProjectConfig, IProjectConfigInitialState } from './IProjectConfig';\n\nexport interface IReducer {\n    storeState: IStore;\n    createProjectState: IProjectConfig;\n}\n\nexport const IReducerInitialValue: IReducer = {\n    storeState: IStoreInitialState,\n    createProjectState: IProjectConfigInitialState\n};\n","import { routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { ReducerConfiguration } from './reducers';\nimport { IReducerInitialValue } from '../models/IReducer';\n\nexport const history = createBrowserHistory();\n\nexport function configureStore() {\n    const store = createStore(\n        ReducerConfiguration(history),\n        IReducerInitialValue,\n        compose(\n            applyMiddleware(\n                routerMiddleware(history)\n            )\n        )\n    );\n    return store;\n};","import * as React from 'react';\nimport { connect, DispatchProp } from 'react-redux';\n\nimport { createStyles, withStyles, StyledComponentProps } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\n\nimport * as ProjectActions from '../store/actions/CreateNewProject.actions';\nimport { ProjectFormFieldConfig } from '../config/FormConfig';\n\nconst styles = createStyles({\n    margin10: {\n        margin: '10px'\n    }\n});\n\ninterface InputFieldProps extends ProjectFormFieldConfig {\n    value: string;\n    classes: any;\n}\n\ntype Props = InputFieldProps & DispatchProp & StyledComponentProps;\n\nclass InputField extends React.Component<Props> {\n    private inputRef = React.createRef();\n    constructor(props: Props) {\n        super(props);\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    handleInputChange(event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) {\n        const { dispatch } = this.props;\n        dispatch(this.props.valueEmitter(event.target.value));\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <FormControl className={classes.margin10}>\n                {!this.props.select && <TextField\n                    id={this.props.id}\n                    label={this.props.label}\n                    placeholder={this.props.placeholder}\n                    innerRef={this.inputRef}\n                    className={this.props.className}\n                    value={this.props.value}\n                    margin=\"normal\"\n                    onChange={this.handleInputChange}\n                />}\n                {\n                    this.props.select && (\n                        <>\n                            <InputLabel htmlFor={this.props.id}>{this.props.label}</InputLabel>\n                            <Select\n                                value={this.props.value}\n                                onChange={this.handleInputChange}\n                                inputProps={{\n                                    name: this.props.label,\n                                    id: this.props.id,\n                                }}>\n                                <MenuItem value=\"\">\n                                    <em>None</em>\n                                </MenuItem>\n                                {\n                                    this.props.options.filter((op: any) => !op.disabled).map((op: any) => {\n                                        return <MenuItem key={this.props.id + \"_\" + op.value} value={op.value} disabled={op.disabled}>{op.title}</MenuItem>\n                                    })\n                                }\n                            </Select>\n                        </>\n                    )\n                }\n            </FormControl>\n        );\n    }\n}\n\nexport default withStyles(styles)(connect()(InputField));","import { ActionCreator } from 'redux';\n\nimport * as ProjectActions from '../store/actions/CreateNewProject.actions';\nimport { IReducer } from '../models/IReducer';\n\nexport const FORM_CONFIG = {\n    FORM_FIELD_MARGIN: 'normal', // Valid Values \"none\" | \"dense\" | \"normal\" | undefined\n};\n\nexport interface ProjectFormSelectFieldOptionsConfing {\n    title: string;\n    value: string;\n    disabled: boolean;\n    appliesTo?: string[];\n}\n\nexport interface ProjectFormFieldConfig {\n    id: string;\n    label: string;\n    placeholder: string;\n    className: string;\n    select: boolean;\n    disabled: boolean;\n    valueSelector: (state: IReducer) => string;\n    valueEmitter: (payload: string) => ProjectActions.IProjectConfigAction;\n    options: ProjectFormSelectFieldOptionsConfing[];\n}\n\nexport interface FormConfig { }\n\nexport const CreateProjectFormConfig: ProjectFormFieldConfig[] = [\n    {\n        id: 'project-name',\n        label: 'Enter Project Name',\n        placeholder: 'Enter Project Name',\n        valueSelector: ProjectActions.selectNewProjectName,\n        valueEmitter: ProjectActions.UpdateNameCreateProjectAction,\n        className: '',\n        select: false,\n        disabled: false,\n        options: []\n    },\n    {\n        id: 'project-framework-name',\n        label: 'Select Framework',\n        placeholder: 'Select Framework',\n        valueSelector: ProjectActions.selectNewProjectFramework,\n        valueEmitter: ProjectActions.UpdateFrameworkCreateProjectAction,\n        className: '',\n        select: true,\n        disabled: false,\n        options: [\n            {\n                title: 'AngularJS',\n                value: 'ng',\n                disabled: true\n            },\n            {\n                title: 'Angular',\n                value: 'angular',\n                disabled: true\n            },\n            {\n                title: 'React',\n                value: 'react',\n                disabled: false\n            },\n            {\n                title: 'Vue',\n                value: 'vue',\n                disabled: true\n            }\n        ]\n    },\n    {\n        id: 'project-store-module-name',\n        label: 'Select Store Module',\n        placeholder: 'Select Store Module',\n        valueSelector: ProjectActions.selectNewProjectStoreModule,\n        valueEmitter: ProjectActions.UpdateStoreModuleCreateProjectAction,\n        className: '',\n        select: true,\n        disabled: false,\n        options: [\n            {\n                title: 'Redux',\n                value: 'redux',\n                appliesTo: ['react', 'ng', 'angular', 'vue'],\n                disabled: false\n            },\n            {\n                title: 'NgRx Store',\n                value: 'ngrx',\n                appliesTo: ['angular'],\n                disabled: true\n            }\n        ]\n    },\n    {\n        id: 'project-middleware-name',\n        label: 'Select Middleware',\n        placeholder: 'Select Middleware',\n        valueSelector: ProjectActions.selectNewProjectMiddleware,\n        valueEmitter: ProjectActions.UpdateMiddlewareCreateProjectAction,\n        className: '',\n        select: true,\n        disabled: true,\n        options: [\n            {\n                title: 'Redux Thunk',\n                value: 'thunk',\n                appliesTo: ['react'],\n                disabled: true\n            },\n            {\n                title: 'Redux Promise',\n                value: 'promise',\n                appliesTo: ['react'],\n                disabled: true\n            },\n            {\n                title: 'Redux Saga',\n                value: 'saga',\n                appliesTo: ['react'],\n                disabled: true\n            },\n            {\n                title: 'Redux Observable',\n                value: 'observable',\n                appliesTo: ['react'],\n                disabled: true\n            }\n        ]\n    }\n];","import * as React from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { connect, DispatchProp } from 'react-redux';\n\nimport { createStyles, withStyles } from '@material-ui/core/styles';\n\nimport Fab from '@material-ui/core/Fab';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport ClearIcon from '@material-ui/icons/Clear';\nimport SaveIcon from '@material-ui/icons/Save';\n\nimport InputField from './InputField';\n\nimport { CreateProjectFormConfig, ProjectFormFieldConfig } from '../config/FormConfig';\nimport { IReducer } from '../models/IReducer';\n\nconst styles = createStyles({\n    jcc: {\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    padded5: {\n        padding: '15px 5px'\n    },\n    formContainer: {\n        width: '600px',\n    },\n    margin10: {\n        margin: '0 10px'\n    },\n    button: {\n        margin: '0 10px',\n        width: '50%'\n    },\n    icon: {\n        margin: '0 5px'\n    },\n    buttons: {\n        flexDirection: 'row',\n        margin: '10px 0'\n    }\n});\n\n\ninterface CreateNewProjectProps extends RouteComponentProps, DispatchProp {\n    state: IReducer;\n    classes: any;\n}\n\nfunction CreateNewProject(props: CreateNewProjectProps) {\n    const { classes, state } = props;\n\n    function startStoreConfiguration() {\n        props.history.push('/configure-store');\n    }\n\n    return (\n        <div className={['f', 'c', classes.jcc].join(' ')}>\n            <Paper className={[classes.padded5, classes.formContainer].join(' ')} elevation={5}>\n                <Typography component=\"h3\" variant=\"h5\" className={classes.margin10}>Create New Project</Typography>\n                <FormGroup>\n                    {\n                        CreateProjectFormConfig.map(\n                            (pc: ProjectFormFieldConfig) => <InputField key={pc.id} {...pc} value={pc.valueSelector(state)} />\n                        )\n                    }\n                    <FormControl className={classes.buttons}>\n                        <Fab variant=\"extended\" color=\"primary\" aria-label=\"Create\" className={classes.button} onClick={startStoreConfiguration}>\n                            <SaveIcon className={classes.icon} />\n                            Create\n                        </Fab>\n                        <Fab variant=\"extended\" color=\"secondary\" aria-label=\"Cancel\" className={classes.button}>\n                            <ClearIcon className={classes.icon} />\n                            Cancel\n                        </Fab>\n                    </FormControl>\n                </FormGroup>\n            </Paper>\n            <hr />\n        </div>\n    );\n}\n\nfunction mapState(state: IReducer) {\n    return { state }\n}\n\nexport default withRouter(\n    withStyles(styles)(\n        connect(mapState)(CreateNewProject)\n    )\n);","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport * as monaco from 'monaco-editor';\n\nimport { createStyles, withStyles } from '@material-ui/core/styles';\nimport { IStyledConnectedComponentWithProps } from '../models/IStyledConnectedComponent';\n\nconst styles = createStyles({\n    editor: {\n        height: '100%',\n        width: '100%'\n    }\n});\n\nconst defaultOptions: monaco.editor.IEditorConstructionOptions = {\n    theme: 'vs-dark',\n    language: 'json'\n}\n\ninterface MonacoEditorProps extends IStyledConnectedComponentWithProps {\n    onEditorChange: (value: string) => void;\n    onEditorMount: () => void;\n}\n\nclass MonacoEditor extends React.Component<MonacoEditorProps> {\n    private textAreaRef = React.createRef<HTMLDivElement>();\n    private _editor: any = null;\n    constructor(props: MonacoEditorProps) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this._editor = monaco.editor.create(this.textAreaRef.current as HTMLElement, { ...defaultOptions, ...this.props });\n        if (this.props.onEditorChange) {\n            this._editor.onDidChangeModelContent(() => {\n                this.props.onEditorChange(this._editor.getValue());\n            })\n        }\n    }\n\n    render() {\n        const { classes = {} } = this.props;\n        return (\n            <div className={classes.editor} ref={this.textAreaRef}></div>\n        );\n    }\n}\n\nexport default withStyles(styles)(connect()(MonacoEditor));","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Dispatch } from 'redux';\n\nimport { createStyles, withStyles } from '@material-ui/core/styles';\nimport { IReducer } from '../models/IReducer';\nimport { selectStoreInitialState, UpdateStoreStateAction, IStoreStateAction, selectStoreState, selectStoreIsValid } from '../store/actions/StoreState.actions';\n\nimport { IStore } from '../models/IStore';\nimport { IStyledConnectedComponent } from '../models/IStyledConnectedComponent';\n\nimport MonacoEditor from './MonacoEditor';\nimport { IValidState } from '../models/IValidState';\nimport { createActions } from '../code-generation/ActionCreator';\n\nconst styles = createStyles({});\n\ninterface StoreStateConfigProps extends IStyledConnectedComponent {\n    value: string;\n    valueUpdated: (value: string) => IStoreStateAction;\n    currentState: IValidState;\n    isValid: boolean;\n}\n\nclass StoreStateConfig extends React.Component<StoreStateConfigProps> {\n    constructor(props: StoreStateConfigProps) {\n        super(props);\n        this.onMonacoEditorChanged = this.onMonacoEditorChanged.bind(this);\n        this.onMonacoEditorMounted = this.onMonacoEditorMounted.bind(this);\n    }\n\n    onMonacoEditorChanged(value: string) {\n        this.props.valueUpdated(value);\n    }\n\n    componentDidMount() {\n    }\n\n    onMonacoEditorMounted() { }\n\n    render() {\n        if (this.props.isValid) {\n            createActions(this.props.currentState.models);\n        }\n        return (\n            <MonacoEditor onEditorChange={this.props.valueUpdated} onEditorMount={this.onMonacoEditorMounted} value={this.props.value} />\n        );\n    }\n}\n\nfunction mapState(state: IReducer) {\n    return {\n        value: selectStoreInitialState(state),\n        currentState: selectStoreState(state),\n        isValid: selectStoreIsValid(state)\n    }\n}\n\nfunction mapDispatch(dispatch: Dispatch) {\n    return {\n        valueUpdated: (value: string) => dispatch(UpdateStoreStateAction(value))\n    }\n}\n\nexport default withStyles(styles)(\n    withRouter(\n        connect(mapState, mapDispatch)(\n            StoreStateConfig\n        )\n    )\n);","import { IModel } from \"../models/IValidState\";\nimport * as str from 'strman';\nimport { render } from \"ejs\";\n\nconst modelOperations = ['CREATE', 'UPDATE', 'DELETE'];\n\nconst actionsFileTemplate = `// <%= options.actionsFileName %>.js\nimport { <%=options.constants.variable%> } from '../constants/<%=options.constantsFileName%>'\n<%options.functions.forEach(fn => { %>\nexport function <%=fn.functionName%>(payload) {\n    return {\n        type: <%=fn.type%>,\n        payload\n    }\n}\n<%})%>`;\n\nconst constantsFileTemplate = `// <%=options.constantsFileName%>.js\nexport const <%=options.constants.variable%> = {\n<%options.constants.values.forEach((c, i) => {%>\n    <%=c.key%>: \"<%=c.value%>\"<% if(i < options.constants.values.length - 1){%>,<%}%>\n<%})%>\n}\n`;\n\nfunction generateFunctionName(op: string, name: string) {\n    const n = [op.toLowerCase(), name, 'Action'].join(' ');\n    return str.toCamelCase(n);\n}\n\nfunction generateActionId(op: string, name: string) {\n    return [op, name, 'Action'].join('-').toUpperCase();\n}\n\nfunction generateFileFileConfig(model: IModel, type: string, output: any) {\n    const name = model.name.toLowerCase(),\n        NAME = model.name.toUpperCase(),\n        fileName = `${NAME}.${type}`,\n        filePath = `actions/${fileName}`;\n\n\n    return {\n        name,\n        NAME,\n        fileName,\n        filePath\n    };\n}\n\nfunction generateActionFunctionConfig(options: any) {\n    options.functions = modelOperations.map((op: string) => {\n        return {\n            id: generateActionId(op, options.name),\n            functionName: generateFunctionName(op, options.name)\n        };\n    });\n\n    return options;\n}\n\nfunction generateActionConstants(options: any) {\n    const { NAME, name } = options;\n    const variable = `${NAME}_CONSTANTS`;\n    return {\n        ...options,\n        ...{\n            constants: {\n                variable,\n                values: modelOperations.map((op: string) => {\n                    const key = `${op}_${NAME}`;\n                    const value = `[${NAME} ACTIONS] ${str.toStudlyCaps(op)} ${NAME}`;\n                    return {\n                        id: generateActionId(op, options.name),\n                        key,\n                        value,\n                        fullyQualifiedName: `${variable}.${key}`\n                    }\n                })\n            }\n        }\n    };\n}\n\nfunction assignTypesToActions(options: any) {\n    const { constants, functions } = options;\n    return {\n        ...options, ...{\n            functions: functions.map((fn: any) => {\n                const type = constants.values.find((v: any) => v.id === fn.id);\n                fn.type = `${constants.variable}.${type.key}`;\n                return fn;\n            })\n        }\n    }\n}\n\nexport function createActions(models: IModel[]) {\n\n    const output = models.map((model: IModel) => {\n        // let options = generateActionsFileConfig(model, {});\n        // options = generateActionFunctionConfig(options);\n        // options = generateActionConstants(options);\n\n        // options = assignTypesToActions(options);\n\n        // const actionsCode = render(actionsFileTemplate, { options });\n        // const constantsCode = render(constantsFileTemplate, { options });\n\n        // console.log(constantsCode);\n        // console.log(actionsCode);\n\n        return {};\n    });\n\n    console.log(output);\n\n}","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { createStyles, withStyles } from '@material-ui/core/styles';\n\nimport { IStyledConnectedComponent } from '../models/IStyledConnectedComponent';\nimport { IReducer } from '../models/IReducer';\nimport { selectStoreState, selectStoreInitialState, selectStoreIsValid } from '../store/actions/StoreState.actions';\n\nimport MonacoEditor from './MonacoEditor';\n\nimport { createActions } from '../code-generation/ActionCreator';\nimport { IValidState } from '../models/IValidState';\n\nconst styles = createStyles({\n    leftPanel: {\n        width: '450px',\n        display: 'flex'\n    }\n});\n\ninterface StoreStateConfigProps extends IStyledConnectedComponent {\n    currentState: IValidState;\n    currentStateValue: string;\n    isValid: boolean;\n}\n\nclass StoreStateConfig extends React.Component<StoreStateConfigProps> {\n    constructor(props: StoreStateConfigProps) {\n        super(props);\n    }\n\n    render() {\n        const { classes = {} } = this.props;\n        const v = this.props.currentState.state.map((s: any) => s.value);\n        const vv = JSON.stringify(v);\n        return (\n            <div className=\"f r\">\n                <div className=\"f\">\n                    <MonacoEditor readOnly={true} value={this.props.currentStateValue} />\n                </div>\n                <div className=\"f\">\n                    <MonacoEditor />\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapState(state: IReducer) {\n    return {\n        currentState: selectStoreState(state),\n        currentStateValue: selectStoreInitialState(state),\n        isValid: selectStoreIsValid(state)\n    }\n}\n\nexport default withStyles(styles)(\n    withRouter(\n        connect(mapState)(\n            StoreStateConfig\n        )\n    )\n)","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { createStyles, withStyles } from '@material-ui/core/styles';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\n\r\n\r\nimport StoreStateConfig from './StoreStateConfig';\r\nimport StoreActionsConfig from './StoreActionsConfig';\r\n\r\nimport { IStyledConnectedComponent } from '../models/IStyledConnectedComponent';\r\nimport { IReducer } from '../models/IReducer';\r\nimport { selectStoreIsValid } from '../store/actions/StoreState.actions';\r\nimport { Tooltip } from '@material-ui/core';\r\n\r\nconst styles = createStyles({\r\n    footerButton: {\r\n        margin: '0 10px;'\r\n    },\r\n    buttons: {\r\n        borderTop: '1px solid #bdbdbd',\r\n        height: '55px',\r\n        display: 'flex',\r\n        flexDirection: 'row-reverse',\r\n        alignItems: 'center'\r\n    },\r\n    stepper: {\r\n        borderBottom: '1px solid #bdbdbd'\r\n    },\r\n    component: {\r\n        padding: '10px'\r\n    },\r\n    abandon: {\r\n        alignSelf: 'flex-end'\r\n    },\r\n    icon: {\r\n        margin: '0 5px',\r\n        marginLeft: '-7px'\r\n    },\r\n    iconR: {\r\n        marginLeft: '4px'\r\n    },\r\n    spacer: {\r\n        display: 'flex',\r\n        flex: 1\r\n    },\r\n    lc: {\r\n        textTransform: 'lowercase'\r\n    }\r\n});\r\n\r\nconst ConfigureReducers = () => <h5>This is Configure Reducers Step</h5>;\r\n\r\ninterface IStep {\r\n    title: string;\r\n    component: any;\r\n    id: number;\r\n    key: string;\r\n}\r\n\r\nconst steps: IStep[] = [\r\n    {\r\n        title: 'Configure State',\r\n        component: StoreStateConfig,\r\n        id: 1,\r\n        key: 'configure-store-1'\r\n    },\r\n    {\r\n        title: 'Configure Actions',\r\n        component: StoreActionsConfig,\r\n        id: 2,\r\n        key: 'configure-actions-3'\r\n    },\r\n    {\r\n        title: 'Configure Reducers',\r\n        component: ConfigureReducers,\r\n        id: 3,\r\n        key: 'configure-reducers-2'\r\n    }\r\n];\r\n\r\nconst findIndex: (id: number) => number = (id: number) => steps.findIndex((s: IStep) => s.id === id);\r\nconst isFirstStep: (id: number) => boolean = (id: number): boolean => findIndex(id) === 0;\r\nconst isLastStep: (id: number) => boolean = (id: number): boolean => (findIndex(id) === (steps.length - 1));\r\nconst isCompleted: (id: number, activeStep: IStep) => boolean = (id: number, activeStep: IStep): boolean => {\r\n    const currentIndex = findIndex(id);\r\n    const activeIndex = findIndex(activeStep.id);\r\n    return currentIndex < activeIndex;\r\n}\r\n\r\ninterface ConfigureStoreProps extends IStyledConnectedComponent {\r\n    isValid: boolean;\r\n}\r\n\r\ninterface ConfigureStoreState {\r\n    currentStep: IStep;\r\n}\r\n\r\nclass ConfigureStore extends React.Component<ConfigureStoreProps, ConfigureStoreState> {\r\n\r\n    constructor(props: ConfigureStoreProps) {\r\n        super(props);\r\n        this.state = {\r\n            currentStep: steps[0]\r\n        };\r\n        this.handleNext = this.handleNext.bind(this);\r\n        this.handlePrev = this.handlePrev.bind(this);\r\n        this.handleDone = this.handleDone.bind(this);\r\n        this.handleDiscard = this.handleDiscard.bind(this);\r\n        this.handleTabChange = this.handleTabChange.bind(this);\r\n    }\r\n\r\n    handlePrev() {\r\n        const currentIndex = findIndex(this.state.currentStep.id);\r\n        const prevStep = steps.find((s: IStep) => findIndex(s.id) === currentIndex - 1);\r\n\r\n        if (prevStep) {\r\n            this.setState({\r\n                currentStep: prevStep\r\n            });\r\n        }\r\n    }\r\n\r\n    handleTabChange() { }\r\n\r\n    handleNext() {\r\n        const currentIndex = findIndex(this.state.currentStep.id);\r\n        const nextStep = steps.find((s: IStep) => findIndex(s.id) === currentIndex + 1);\r\n\r\n        if (nextStep) {\r\n            this.setState({\r\n                currentStep: nextStep\r\n            });\r\n        }\r\n    }\r\n\r\n    handleDone() {\r\n        console.log('Done... Should Navigate to Configure Components Section');\r\n    }\r\n\r\n    handleDiscard() {\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const { id } = this.state.currentStep;\r\n        const activeStep = findIndex(id);\r\n        const { classes = {} } = this.props;\r\n        return (\r\n            <div className=\"f c\">\r\n                {/* <div className={classes.stepper}>\r\n                    <Stepper activeStep={activeStep}>\r\n                        {\r\n                            steps.map((s: IStep) => {\r\n                                const props = {\r\n                                    completed: isCompleted(s.id, this.state.currentStep)\r\n                                };\r\n                                const labelProps = {\r\n                                    optional: (<Typography variant=\"caption\">Required</Typography>)\r\n                                };\r\n                                return (\r\n                                    <Step key={s.key} {...props}>\r\n                                        <StepLabel {...labelProps}>{s.title}</StepLabel>\r\n                                    </Step>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Stepper>\r\n                </div> */}\r\n                <div>\r\n                    <Tabs value={activeStep} onChange={this.handleTabChange} >\r\n                        <Tab value={0} label=\"state.js\" className={classes.lc}/>\r\n                        <Tab value={1} label=\"constant.js\" className={classes.lc}/>\r\n                        <Tab value={2} label=\"actions.js\" className={classes.lc}/>\r\n                        <Tab value={3} label=\"reducer.js\" className={classes.lc} />\r\n                    </Tabs>\r\n                </div>\r\n                <div className={[\"f c\", classes.component].join(' ')}>\r\n                    {\r\n                        <this.state.currentStep.component />\r\n                    }\r\n                </div>\r\n                {/* <div className={classes.buttons}>\r\n                    <Button disabled={!isLastStep(id)} className={classes.footerButton} variant=\"contained\" color=\"primary\" onClick={this.handleDone}>\r\n                        Configure Components\r\n                        <CheckIcon className={classes.iconR} />\r\n                    </Button>\r\n\r\n                    {this.props.isValid && <Button disabled={[steps.length - 1].includes(activeStep)} className={classes.footerButton} variant=\"contained\" color=\"primary\" onClick={this.handleNext}>\r\n                        Next\r\n                        <KeyboardArrowRightIcon className={classes.iconR} />\r\n                    </Button>}\r\n\r\n                    {\r\n                        !this.props.isValid &&\r\n                        <Tooltip title=\"Invalid JSON. Please fix the JSON in the editor before continuing\" placement=\"top\">\r\n                            <Button className={classes.footerButton} variant=\"contained\">\r\n                                Next\r\n                                <KeyboardArrowRightIcon className={classes.iconR} />\r\n                            </Button>\r\n                        </Tooltip>\r\n                    }\r\n\r\n                    <Button disabled={isFirstStep(id)} className={classes.footerButton} variant=\"contained\" color=\"secondary\" onClick={this.handlePrev}>\r\n                        <KeyboardArrowLeftIcon className={classes.icon} />\r\n                        Previous\r\n                    </Button>\r\n                    <span className={classes.spacer}></span>\r\n\r\n                    <Button className={classes.footerButton} variant=\"contained\" color=\"secondary\" onClick={this.handleDiscard}>\r\n                        <ClearIcon className={classes.icon} />\r\n                        Discard\r\n                    </Button>\r\n                </div> */}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapState(state: IReducer) {\r\n    return {\r\n        isValid: selectStoreIsValid(state)\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(connect(mapState)(ConfigureStore));","import * as React from 'react';\nimport { Route, RouteComponentProps } from 'react-router';\nimport { Switch, withRouter } from 'react-router-dom';\nimport { connect, DispatchProp } from 'react-redux';\nimport { IReducer } from '../models/IReducer';\nimport { selectStoreInitialState } from '../store/actions/StoreState.actions';\n\nimport CreateNewProject from './CreateNewProject';\nimport ConfigureStore from './ConfigureStore';\n\ninterface ContentComponentProps extends RouteComponentProps<any>, DispatchProp {\n    intialState: any;\n}\n\nclass ContentComponent extends React.Component<ContentComponentProps> {\n    render() {\n        return (\n            <div className=\"f c\">\n                <Switch>\n                    <Route exact path=\"/\" component={CreateNewProject} />\n                    <Route exact path=\"/configure-store\" component={ConfigureStore} />\n                </Switch>\n            </div>\n        )\n    }\n}\n\nfunction mapState(state: IReducer) {\n    return {\n        intialState: selectStoreInitialState(state)\n    }\n}\n\n\n\nconst Content = withRouter(connect(mapState)(ContentComponent));\n\nexport default Content;","import * as React from 'react';\r\nimport { createStyles, withStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nimport CodeIcon from '@material-ui/icons/Code';\r\n\r\nconst styles = createStyles({\r\n    footer: {\r\n        backgroundColor: '#292c2f',\r\n        color: 'white',\r\n        height: '75px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    link: {\r\n        color: 'white',\r\n        margin: '0 5px',\r\n        fontWeight: 200\r\n    },\r\n    iconL: {\r\n        color: 'white',\r\n        fontWeight: 400,\r\n        margin: '0 5px',\r\n        fontSize: '32px'\r\n    },\r\n    spacer: {\r\n        flex: 1,\r\n        flexGrow: 1\r\n    },\r\n    padded: {\r\n        padding: '0 10px'\r\n    }\r\n})\r\n\r\nfunction Footer(props: any) {\r\n    const { footer, link, padded, spacer, iconL } = props.classes;\r\n    return (\r\n        <footer className={footer}>\r\n            <div className={padded}>\r\n                <Typography className={link}>Created by,</Typography>\r\n                <a href=\"https://github.com/adityaparab\" target=\"_blank\">\r\n                    <Typography component=\"h6\" className={link}>\r\n                        Aditya Parab\r\n                    </Typography>\r\n                </a>\r\n                <Typography className={link} component=\"h6\">contact.adityaparab@gmail.com</Typography>\r\n            </div>\r\n            <div className={spacer} />\r\n            <div className={padded}>\r\n                <a href=\"https://github.com/adityaparab/redux-ui-builder\">\r\n                    <CodeIcon className={iconL} />\r\n                </a>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(Footer);","import * as React from 'react';\nimport { connect, DispatchProp } from 'react-redux';\n\nimport { createStyles, withStyles, StyledComponentProps } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst styles = createStyles({\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n});\n\ntype ReduxStyleProps = DispatchProp & StyledComponentProps;\n\ninterface NavbarComponentProps extends React.Props<ReduxStyleProps> {\n    classes: any;\n}\n\nclass Navbar extends React.Component<NavbarComponentProps> {\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>Redux App Builder</Typography>\n                    {/* <Button color=\"inherit\">Login</Button> */}\n                </Toolbar>\n            </AppBar>\n        );\n    }\n}\n\nexport default withStyles(styles)(connect()(Navbar));","import React, { Component } from 'react';\nimport { connect, DispatchProp } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { IReducer } from './models/IReducer';\nimport { selectStoreInitialState, UpdateStoreStateAction } from './store/actions/StoreState.actions';\nimport { Dispatch } from 'redux';\nimport { IStore } from './models/IStore';\n\nimport Content from './components/Content';\nimport Footer from './components/Footer';\nimport Navbar from './components/Navbar';\n\ninterface AppComponentProps extends React.Props<DispatchProp> {\n  initialState: any;\n  setInitialStoreState: (storeState: IStore) => void;\n}\n\nclass AppComponent extends Component<AppComponentProps> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"f c\">\n        <Navbar />\n        <Content />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nfunction mapState(state: IReducer) {\n  return {\n    initialState: selectStoreInitialState(state)\n  }\n}\n\nfunction mapDispatch(dispatch: Dispatch) {\n  return {\n    setInitialStoreState: (storeState: IStore) => dispatch(UpdateStoreStateAction(storeState))\n  }\n}\n\nconst App = connect(mapState, mapDispatch)(AppComponent);\n\nexport default withStyles({})(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { ConnectedRouter } from 'connected-react-router';\n\nimport { createStyles, withStyles } from '@material-ui/core/styles';\n\nimport { configureStore, history } from './store';\n\nimport App from './App';\n\nconst store = configureStore();\n\nconst baseStyles = createStyles({\n    f: {\n        display: 'flex',\n        flex: 1\n    },\n    c: {\n        flexDirection: 'column'\n    },\n    r: {\n        flexDirection: 'row'\n    }\n});\n\nconst baseWrapper = () => (\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <App />\n        </ConnectedRouter>\n    </Provider>\n);\n\nconst Base = withStyles(baseStyles)(baseWrapper);\n\nReactDOM.render(\n    <Base />\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}